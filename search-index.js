var searchIndex = {};
searchIndex['cargo'] = {"items":[[5,"execute_main","cargo","",null,null],[5,"call_main","","",null,null],[5,"execute_main_without_stdin","","",null,null],[5,"call_main_without_stdin","","",null,null],[5,"process_executed","","",null,{"inputs":[{"name":"cliresult"},{"name":"multishell"}],"output":null}],[5,"shell","","",null,{"inputs":[{"name":"verbosity"},{"name":"colorconfig"}],"output":{"name":"multishell"}}],[5,"handle_error","","",null,{"inputs":[{"name":"clierror"},{"name":"multishell"}],"output":null}],[5,"version","","",null,{"inputs":[],"output":{"name":"string"}}],[0,"core","","",null,null],[3,"PackageIdSpec","cargo::core","",null,null],[0,"source","","",null,null],[3,"SourceId","cargo::core::source","Unique identifier for a source of packages.",null,null],[3,"SourceMap","","",null,null],[3,"SourcesMut","","",null,null],[3,"SourceSet","","List of `Source` implementors. `SourceSet` itself implements `Source`.",null,null],[4,"GitReference","","",null,null],[13,"Tag","","",0,null],[13,"Branch","","",0,null],[13,"Rev","","",0,null],[6,"Sources","","",null,null],[8,"Source","","A Source finds and downloads remote packages based on names and\nversions.",null,null],[10,"update","","The update method performs any network operations required to\nget the entire list of all names, versions and dependencies of\npackages managed by the Source.",1,{"inputs":[{"name":"source"}],"output":{"name":"cargoresult"}}],[10,"download","","The download method fetches the full package for each name and\nversion specified.",1,null],[10,"get","","The get method returns the Path of each specified package on the\nlocal file system. It assumes that `download` was already called,\nand that the packages are already locally available on the file\nsystem.",1,null],[10,"fingerprint","","Generates a unique string which represents the fingerprint of the\ncurrent state of the source.",1,{"inputs":[{"name":"source"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"hash","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"gitreference"},{"name":"gitreference"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"gitreference"},{"name":"gitreference"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"gitreference"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"gitreference"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"gitreference"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"gitreference"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"gitreference"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"gitreference"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"gitreference"}],"output":{"name":"gitreference"}}],[11,"fmt","","",0,{"inputs":[{"name":"gitreference"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"sourceid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"sourceid"}],"output":{"name":"sourceid"}}],[11,"from_url","","Parses a source URL and returns the corresponding ID.",2,{"inputs":[{"name":"sourceid"},{"name":"string"}],"output":{"name":"sourceid"}}],[11,"to_url","","",2,{"inputs":[{"name":"sourceid"}],"output":{"name":"string"}}],[11,"for_path","","",2,{"inputs":[{"name":"sourceid"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"for_git","","",2,{"inputs":[{"name":"sourceid"},{"name":"url"},{"name":"gitreference"}],"output":{"name":"sourceid"}}],[11,"for_registry","","",2,{"inputs":[{"name":"sourceid"},{"name":"url"}],"output":{"name":"sourceid"}}],[11,"for_central","","Returns the `SourceId` corresponding to the main repository.",2,{"inputs":[{"name":"sourceid"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"url","","",2,{"inputs":[{"name":"sourceid"}],"output":{"name":"url"}}],[11,"is_path","","",2,{"inputs":[{"name":"sourceid"}],"output":{"name":"bool"}}],[11,"is_registry","","",2,{"inputs":[{"name":"sourceid"}],"output":{"name":"bool"}}],[11,"is_git","","",2,{"inputs":[{"name":"sourceid"}],"output":{"name":"bool"}}],[11,"load","","Creates an implementation of `Source` corresponding to this ID.",2,{"inputs":[{"name":"sourceid"},{"name":"config"}],"output":{"name":"box"}}],[11,"precise","","",2,{"inputs":[{"name":"sourceid"}],"output":{"name":"option"}}],[11,"git_reference","","",2,{"inputs":[{"name":"sourceid"}],"output":{"name":"option"}}],[11,"with_precise","","",2,{"inputs":[{"name":"sourceid"},{"name":"option"}],"output":{"name":"sourceid"}}],[11,"is_default_registry","","",2,{"inputs":[{"name":"sourceid"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"sourceid"},{"name":"sourceid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"sourceid"},{"name":"sourceid"}],"output":{"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"sourceid"},{"name":"sourceid"}],"output":{"name":"ordering"}}],[11,"encode","","",2,{"inputs":[{"name":"sourceid"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"sourceid"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"sourceid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,{"inputs":[{"name":"sourceid"},{"name":"s"}],"output":null}],[11,"to_ref_string","","",0,{"inputs":[{"name":"gitreference"}],"output":{"name":"option"}}],[11,"new","","",3,{"inputs":[{"name":"sourcemap"}],"output":{"name":"sourcemap"}}],[11,"contains","","",3,{"inputs":[{"name":"sourcemap"},{"name":"sourceid"}],"output":{"name":"bool"}}],[11,"get","","",3,{"inputs":[{"name":"sourcemap"},{"name":"sourceid"}],"output":{"name":"option"}}],[11,"get_mut","","",3,{"inputs":[{"name":"sourcemap"},{"name":"sourceid"}],"output":{"name":"option"}}],[11,"get_by_package_id","","",3,{"inputs":[{"name":"sourcemap"},{"name":"packageid"}],"output":{"name":"option"}}],[11,"insert","","",3,{"inputs":[{"name":"sourcemap"},{"name":"sourceid"},{"name":"box"}],"output":null}],[11,"is_empty","","",3,{"inputs":[{"name":"sourcemap"}],"output":{"name":"bool"}}],[11,"len","","",3,{"inputs":[{"name":"sourcemap"}],"output":{"name":"usize"}}],[11,"sources","","",3,{"inputs":[{"name":"sourcemap"}],"output":{"name":"sources"}}],[11,"sources_mut","","",3,{"inputs":[{"name":"sourcemap"}],"output":{"name":"sourcesmut"}}],[11,"next","","",4,{"inputs":[{"name":"sourcesmut"}],"output":{"name":"option"}}],[11,"new","","",5,{"inputs":[{"name":"sourceset"},{"name":"vec"}],"output":{"name":"sourceset"}}],[11,"query","","",5,{"inputs":[{"name":"sourceset"},{"name":"dependency"}],"output":{"name":"cargoresult"}}],[11,"update","","",5,{"inputs":[{"name":"sourceset"}],"output":{"name":"cargoresult"}}],[11,"download","","",5,null],[11,"get","","",5,null],[11,"fingerprint","","",5,{"inputs":[{"name":"sourceset"},{"name":"package"}],"output":{"name":"cargoresult"}}],[0,"package","cargo::core","",null,null],[3,"Package","cargo::core::package","Information about a package that is available somewhere in the file system.",null,null],[3,"PackageSet","","",null,null],[11,"fmt","","",6,{"inputs":[{"name":"package"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"package"}],"output":{"name":"package"}}],[11,"encode","","",6,{"inputs":[{"name":"package"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","","",6,{"inputs":[{"name":"package"},{"name":"manifest"},{"name":"path"}],"output":{"name":"package"}}],[11,"for_path","","",6,{"inputs":[{"name":"package"},{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"dependencies","","",6,null],[11,"manifest","","",6,{"inputs":[{"name":"package"}],"output":{"name":"manifest"}}],[11,"manifest_path","","",6,{"inputs":[{"name":"package"}],"output":{"name":"path"}}],[11,"name","","",6,{"inputs":[{"name":"package"}],"output":{"name":"str"}}],[11,"package_id","","",6,{"inputs":[{"name":"package"}],"output":{"name":"packageid"}}],[11,"root","","",6,{"inputs":[{"name":"package"}],"output":{"name":"path"}}],[11,"summary","","",6,{"inputs":[{"name":"package"}],"output":{"name":"summary"}}],[11,"targets","","",6,null],[11,"version","","",6,{"inputs":[{"name":"package"}],"output":{"name":"version"}}],[11,"publish","","",6,{"inputs":[{"name":"package"}],"output":{"name":"bool"}}],[11,"has_custom_build","","",6,{"inputs":[{"name":"package"}],"output":{"name":"bool"}}],[11,"generate_metadata","","",6,{"inputs":[{"name":"package"}],"output":{"name":"metadata"}}],[11,"fmt","","",6,{"inputs":[{"name":"package"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"package"},{"name":"package"}],"output":{"name":"bool"}}],[11,"hash","","",6,{"inputs":[{"name":"package"},{"name":"h"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"packageset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"packageset"}],"output":{"name":"packageset"}}],[11,"eq","","",7,{"inputs":[{"name":"packageset"},{"name":"packageset"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"packageset"},{"name":"packageset"}],"output":{"name":"bool"}}],[11,"new","","",7,null],[11,"is_empty","","",7,{"inputs":[{"name":"packageset"}],"output":{"name":"bool"}}],[11,"len","","",7,{"inputs":[{"name":"packageset"}],"output":{"name":"usize"}}],[11,"pop","","",7,{"inputs":[{"name":"packageset"}],"output":{"name":"package"}}],[11,"get","","Get a package by name out of the set",7,{"inputs":[{"name":"packageset"},{"name":"str"}],"output":{"name":"package"}}],[11,"get_all","","",7,null],[11,"packages","","",7,null],[11,"sort","","",7,{"inputs":[{"name":"packageset"}],"output":{"name":"option"}}],[11,"iter","","",7,{"inputs":[{"name":"packageset"}],"output":{"name":"iter"}}],[11,"query","","",7,{"inputs":[{"name":"packageset"},{"name":"dependency"}],"output":{"name":"cargoresult"}}],[0,"package_id","cargo::core","",null,null],[3,"PackageId","cargo::core::package_id","Identifier for a specific version of a package in a specific source.",null,null],[3,"Metadata","","",null,null],[12,"metadata","","",8,null],[12,"extra_filename","","",8,null],[4,"PackageIdError","","",null,null],[13,"InvalidVersion","","",9,null],[13,"InvalidNamespace","","",9,null],[11,"fmt","","",10,{"inputs":[{"name":"packageid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"packageid"}],"output":{"name":"packageid"}}],[11,"encode","","",10,{"inputs":[{"name":"packageid"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"packageid"},{"name":"d"}],"output":{"name":"result"}}],[11,"hash","","",10,{"inputs":[{"name":"packageid"},{"name":"s"}],"output":null}],[11,"eq","","",10,{"inputs":[{"name":"packageid"},{"name":"packageid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"packageid"},{"name":"packageid"}],"output":{"name":"option"}}],[11,"cmp","","",10,{"inputs":[{"name":"packageid"},{"name":"packageid"}],"output":{"name":"ordering"}}],[11,"eq","","",9,{"inputs":[{"name":"packageiderror"},{"name":"packageiderror"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"packageiderror"},{"name":"packageiderror"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"packageiderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"packageiderror"}],"output":{"name":"packageiderror"}}],[11,"description","","",9,{"inputs":[{"name":"packageiderror"}],"output":{"name":"str"}}],[11,"fmt","","",9,{"inputs":[{"name":"packageiderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_human","","",9,{"inputs":[{"name":"packageiderror"}],"output":{"name":"bool"}}],[11,"from","alloc::boxed","",11,{"inputs":[{"name":"box"},{"name":"packageiderror"}],"output":{"name":"box"}}],[11,"fmt","cargo::core::package_id","",8,{"inputs":[{"name":"metadata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"metadata"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"hash","","",8,null],[11,"eq","","",8,{"inputs":[{"name":"metadata"},{"name":"metadata"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"metadata"},{"name":"metadata"}],"output":{"name":"bool"}}],[11,"new","","",10,{"inputs":[{"name":"packageid"},{"name":"str"},{"name":"t"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"name","","",10,{"inputs":[{"name":"packageid"}],"output":{"name":"str"}}],[11,"version","","",10,{"inputs":[{"name":"packageid"}],"output":{"name":"version"}}],[11,"source_id","","",10,{"inputs":[{"name":"packageid"}],"output":{"name":"sourceid"}}],[11,"generate_metadata","","",10,{"inputs":[{"name":"packageid"},{"name":"path"}],"output":{"name":"metadata"}}],[11,"with_precise","","",10,{"inputs":[{"name":"packageid"},{"name":"option"}],"output":{"name":"packageid"}}],[11,"mix","","",8,{"inputs":[{"name":"metadata"},{"name":"t"}],"output":null}],[11,"fmt","","",10,{"inputs":[{"name":"packageid"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"dependency","cargo::core","",null,null],[3,"DependencyInner","cargo::core::dependency","The data underlying a Dependency.",null,null],[3,"Dependency","","Information about a dependency requested by a Cargo manifest.\nCheap to copy.",null,null],[4,"Kind","","",null,null],[13,"Normal","","",12,null],[13,"Development","","",12,null],[13,"Build","","",12,null],[11,"fmt","","",13,{"inputs":[{"name":"dependencyinner"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"dependencyinner"}}],[11,"eq","","",13,{"inputs":[{"name":"dependencyinner"},{"name":"dependencyinner"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"dependencyinner"},{"name":"dependencyinner"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"dependency"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"dependency"}],"output":{"name":"dependency"}}],[11,"eq","","",14,{"inputs":[{"name":"dependency"},{"name":"dependency"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"dependency"},{"name":"dependency"}],"output":{"name":"bool"}}],[11,"encode","","",14,{"inputs":[{"name":"dependency"},{"name":"s"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"kind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"kind"}],"output":{"name":"kind"}}],[11,"eq","","",12,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"encode","","",12,{"inputs":[{"name":"kind"},{"name":"s"}],"output":{"name":"result"}}],[11,"parse","","Attempt to create a `Dependency` from an entry in the manifest.",13,{"inputs":[{"name":"dependencyinner"},{"name":"str"},{"name":"option"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"new_override","","",13,{"inputs":[{"name":"dependencyinner"},{"name":"str"},{"name":"sourceid"}],"output":{"name":"dependencyinner"}}],[11,"version_req","","",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"versionreq"}}],[11,"name","","",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"str"}}],[11,"source_id","","",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"sourceid"}}],[11,"kind","","",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"kind"}}],[11,"specified_req","","",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"option"}}],[11,"only_for_platform","","If none, this dependencies must be built for all platforms.\nIf some, it must only be built for the specified platform.",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"option"}}],[11,"set_kind","","",13,{"inputs":[{"name":"dependencyinner"},{"name":"kind"}],"output":{"name":"dependencyinner"}}],[11,"set_features","","Sets the list of features requested for the package.",13,{"inputs":[{"name":"dependencyinner"},{"name":"vec"}],"output":{"name":"dependencyinner"}}],[11,"set_default_features","","Sets whether the dependency requests default features of the package.",13,{"inputs":[{"name":"dependencyinner"},{"name":"bool"}],"output":{"name":"dependencyinner"}}],[11,"set_optional","","Sets whether the dependency is optional.",13,{"inputs":[{"name":"dependencyinner"},{"name":"bool"}],"output":{"name":"dependencyinner"}}],[11,"set_source_id","","Set the source id for this dependency",13,{"inputs":[{"name":"dependencyinner"},{"name":"sourceid"}],"output":{"name":"dependencyinner"}}],[11,"set_version_req","","Set the version requirement for this dependency",13,{"inputs":[{"name":"dependencyinner"},{"name":"versionreq"}],"output":{"name":"dependencyinner"}}],[11,"set_only_for_platform","","",13,{"inputs":[{"name":"dependencyinner"},{"name":"option"}],"output":{"name":"dependencyinner"}}],[11,"lock_to","","Lock this dependency to depending on the specified package id",13,{"inputs":[{"name":"dependencyinner"},{"name":"packageid"}],"output":{"name":"dependencyinner"}}],[11,"is_transitive","","Returns false if the dependency is only used to build the local package.",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"bool"}}],[11,"is_build","","",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"bool"}}],[11,"is_optional","","",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"bool"}}],[11,"uses_default_features","","Returns true if the default features of the dependency are requested.",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"bool"}}],[11,"features","","Returns the list of features that are requested by the dependency.",13,null],[11,"matches","","Returns true if the package (`sum`) can fulfill this dependency request.",13,{"inputs":[{"name":"dependencyinner"},{"name":"summary"}],"output":{"name":"bool"}}],[11,"matches_id","","Returns true if the package (`id`) can fulfill this dependency request.",13,{"inputs":[{"name":"dependencyinner"},{"name":"packageid"}],"output":{"name":"bool"}}],[11,"into_dependency","","",13,{"inputs":[{"name":"dependencyinner"}],"output":{"name":"dependency"}}],[11,"parse","","Attempt to create a `Dependency` from an entry in the manifest.",14,{"inputs":[{"name":"dependency"},{"name":"str"},{"name":"option"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"new_override","","",14,{"inputs":[{"name":"dependency"},{"name":"str"},{"name":"sourceid"}],"output":{"name":"dependency"}}],[11,"clone_inner","","",14,{"inputs":[{"name":"dependency"}],"output":{"name":"dependencyinner"}}],[11,"version_req","","",14,{"inputs":[{"name":"dependency"}],"output":{"name":"versionreq"}}],[11,"name","","",14,{"inputs":[{"name":"dependency"}],"output":{"name":"str"}}],[11,"source_id","","",14,{"inputs":[{"name":"dependency"}],"output":{"name":"sourceid"}}],[11,"kind","","",14,{"inputs":[{"name":"dependency"}],"output":{"name":"kind"}}],[11,"specified_req","","",14,{"inputs":[{"name":"dependency"}],"output":{"name":"option"}}],[11,"only_for_platform","","If none, this dependencies must be built for all platforms.\nIf some, it must only be built for the specified platform.",14,{"inputs":[{"name":"dependency"}],"output":{"name":"option"}}],[11,"lock_to","","Lock this dependency to depending on the specified package id",14,{"inputs":[{"name":"dependency"},{"name":"packageid"}],"output":{"name":"dependency"}}],[11,"is_transitive","","Returns false if the dependency is only used to build the local package.",14,{"inputs":[{"name":"dependency"}],"output":{"name":"bool"}}],[11,"is_build","","",14,{"inputs":[{"name":"dependency"}],"output":{"name":"bool"}}],[11,"is_optional","","",14,{"inputs":[{"name":"dependency"}],"output":{"name":"bool"}}],[11,"uses_default_features","","Returns true if the default features of the dependency are requested.",14,{"inputs":[{"name":"dependency"}],"output":{"name":"bool"}}],[11,"features","","Returns the list of features that are requested by the dependency.",14,null],[11,"matches","","Returns true if the package (`sum`) can fulfill this dependency request.",14,{"inputs":[{"name":"dependency"},{"name":"summary"}],"output":{"name":"bool"}}],[11,"matches_id","","Returns true if the package (`id`) can fulfill this dependency request.",14,{"inputs":[{"name":"dependency"},{"name":"packageid"}],"output":{"name":"bool"}}],[0,"manifest","cargo::core","",null,null],[3,"Manifest","cargo::core::manifest","Contains all the information about a package, as loaded from a Cargo.toml.",null,null],[3,"ManifestMetadata","","General metadata about a package which is just blindly uploaded to the\nregistry.",null,null],[12,"authors","","",15,null],[12,"keywords","","",15,null],[12,"license","","",15,null],[12,"license_file","","",15,null],[12,"description","","",15,null],[12,"readme","","",15,null],[12,"homepage","","",15,null],[12,"repository","","",15,null],[12,"documentation","","",15,null],[3,"Profile","","",null,null],[12,"opt_level","","",16,null],[12,"lto","","",16,null],[12,"codegen_units","","",16,null],[12,"rustc_args","","",16,null],[12,"rustdoc_args","","",16,null],[12,"debuginfo","","",16,null],[12,"debug_assertions","","",16,null],[12,"rpath","","",16,null],[12,"test","","",16,null],[12,"doc","","",16,null],[12,"run_custom_build","","",16,null],[3,"Profiles","","",null,null],[12,"release","","",17,null],[12,"dev","","",17,null],[12,"test","","",17,null],[12,"bench","","",17,null],[12,"doc","","",17,null],[12,"custom_build","","",17,null],[3,"Target","","Information about a binary, a library, an example, etc. that is part of the\npackage.",null,null],[4,"LibKind","","",null,null],[13,"Lib","","",18,null],[13,"Rlib","","",18,null],[13,"Dylib","","",18,null],[13,"StaticLib","","",18,null],[4,"TargetKind","","",null,null],[13,"Lib","","",19,null],[13,"Bin","","",19,null],[13,"Test","","",19,null],[13,"Bench","","",19,null],[13,"Example","","",19,null],[13,"CustomBuild","","",19,null],[11,"fmt","","",20,{"inputs":[{"name":"manifest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"manifest"}],"output":{"name":"manifest"}}],[11,"fmt","","",15,{"inputs":[{"name":"manifestmetadata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"manifestmetadata"}],"output":{"name":"manifestmetadata"}}],[11,"eq","","",15,{"inputs":[{"name":"manifestmetadata"},{"name":"manifestmetadata"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"manifestmetadata"},{"name":"manifestmetadata"}],"output":{"name":"bool"}}],[11,"encode","","",18,{"inputs":[{"name":"libkind"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",18,null],[11,"eq","","",18,{"inputs":[{"name":"libkind"},{"name":"libkind"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"libkind"},{"name":"libkind"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"libkind"}],"output":{"name":"libkind"}}],[11,"fmt","","",18,{"inputs":[{"name":"libkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",18,{"inputs":[{"name":"libkind"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"crate_type","","Returns the argument suitable for `--crate-type` to pass to rustc.",18,{"inputs":[{"name":"libkind"}],"output":{"name":"str"}}],[11,"eq","","",19,{"inputs":[{"name":"targetkind"},{"name":"targetkind"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"targetkind"},{"name":"targetkind"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"clone","","",19,{"inputs":[{"name":"targetkind"}],"output":{"name":"targetkind"}}],[11,"fmt","","",19,{"inputs":[{"name":"targetkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",19,{"inputs":[{"name":"targetkind"},{"name":"s"}],"output":{"name":"result"}}],[11,"hash","","",16,null],[11,"fmt","","",16,{"inputs":[{"name":"profile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"profile"},{"name":"profile"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"profile"},{"name":"profile"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"profile"}],"output":{"name":"profile"}}],[11,"decode","","",16,{"inputs":[{"name":"profile"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",16,{"inputs":[{"name":"profile"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"profiles"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"profiles"}],"output":{"name":"profiles"}}],[11,"default","","",17,{"inputs":[{"name":"profiles"}],"output":{"name":"profiles"}}],[11,"fmt","","",21,{"inputs":[{"name":"target"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"target"},{"name":"target"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"target"},{"name":"target"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"clone","","",21,{"inputs":[{"name":"target"}],"output":{"name":"target"}}],[11,"encode","","",21,{"inputs":[{"name":"target"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","","",20,{"inputs":[{"name":"manifest"},{"name":"summary"},{"name":"vec"},{"name":"vec"},{"name":"vec"},{"name":"option"},{"name":"manifestmetadata"},{"name":"profiles"},{"name":"bool"}],"output":{"name":"manifest"}}],[11,"dependencies","","",20,null],[11,"exclude","","",20,null],[11,"include","","",20,null],[11,"metadata","","",20,{"inputs":[{"name":"manifest"}],"output":{"name":"manifestmetadata"}}],[11,"name","","",20,{"inputs":[{"name":"manifest"}],"output":{"name":"str"}}],[11,"package_id","","",20,{"inputs":[{"name":"manifest"}],"output":{"name":"packageid"}}],[11,"summary","","",20,{"inputs":[{"name":"manifest"}],"output":{"name":"summary"}}],[11,"targets","","",20,null],[11,"version","","",20,{"inputs":[{"name":"manifest"}],"output":{"name":"version"}}],[11,"warnings","","",20,null],[11,"profiles","","",20,{"inputs":[{"name":"manifest"}],"output":{"name":"profiles"}}],[11,"publish","","",20,{"inputs":[{"name":"manifest"}],"output":{"name":"bool"}}],[11,"links","","",20,{"inputs":[{"name":"manifest"}],"output":{"name":"option"}}],[11,"add_warning","","",20,{"inputs":[{"name":"manifest"},{"name":"string"}],"output":null}],[11,"set_summary","","",20,{"inputs":[{"name":"manifest"},{"name":"summary"}],"output":null}],[11,"lib_target","","",21,{"inputs":[{"name":"target"},{"name":"str"},{"name":"vec"},{"name":"path"},{"name":"metadata"}],"output":{"name":"target"}}],[11,"bin_target","","",21,{"inputs":[{"name":"target"},{"name":"str"},{"name":"path"},{"name":"option"}],"output":{"name":"target"}}],[11,"custom_build_target","","Builds a `Target` corresponding to the `build = \"build.rs\"` entry.",21,{"inputs":[{"name":"target"},{"name":"str"},{"name":"path"},{"name":"option"}],"output":{"name":"target"}}],[11,"example_target","","",21,{"inputs":[{"name":"target"},{"name":"str"},{"name":"path"}],"output":{"name":"target"}}],[11,"test_target","","",21,{"inputs":[{"name":"target"},{"name":"str"},{"name":"path"},{"name":"metadata"}],"output":{"name":"target"}}],[11,"bench_target","","",21,{"inputs":[{"name":"target"},{"name":"str"},{"name":"path"},{"name":"metadata"}],"output":{"name":"target"}}],[11,"name","","",21,{"inputs":[{"name":"target"}],"output":{"name":"str"}}],[11,"crate_name","","",21,{"inputs":[{"name":"target"}],"output":{"name":"string"}}],[11,"src_path","","",21,{"inputs":[{"name":"target"}],"output":{"name":"path"}}],[11,"metadata","","",21,{"inputs":[{"name":"target"}],"output":{"name":"option"}}],[11,"kind","","",21,{"inputs":[{"name":"target"}],"output":{"name":"targetkind"}}],[11,"tested","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"harness","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"documented","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"for_host","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"benched","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"doctested","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"allows_underscores","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"is_lib","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"linkable","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"is_bin","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"is_example","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"is_test","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"is_bench","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"is_custom_build","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"rustc_crate_types","","Returns the arguments suitable for `--crate-type` to pass to rustc.",21,{"inputs":[{"name":"target"}],"output":{"name":"vec"}}],[11,"can_lto","","",21,{"inputs":[{"name":"target"}],"output":{"name":"bool"}}],[11,"set_tested","","",21,{"inputs":[{"name":"target"},{"name":"bool"}],"output":{"name":"target"}}],[11,"set_benched","","",21,{"inputs":[{"name":"target"},{"name":"bool"}],"output":{"name":"target"}}],[11,"set_doctest","","",21,{"inputs":[{"name":"target"},{"name":"bool"}],"output":{"name":"target"}}],[11,"set_for_host","","",21,{"inputs":[{"name":"target"},{"name":"bool"}],"output":{"name":"target"}}],[11,"set_harness","","",21,{"inputs":[{"name":"target"},{"name":"bool"}],"output":{"name":"target"}}],[11,"set_doc","","",21,{"inputs":[{"name":"target"},{"name":"bool"}],"output":{"name":"target"}}],[11,"fmt","","",21,{"inputs":[{"name":"target"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default_dev","","",16,{"inputs":[{"name":"profile"}],"output":{"name":"profile"}}],[11,"default_release","","",16,{"inputs":[{"name":"profile"}],"output":{"name":"profile"}}],[11,"default_test","","",16,{"inputs":[{"name":"profile"}],"output":{"name":"profile"}}],[11,"default_bench","","",16,{"inputs":[{"name":"profile"}],"output":{"name":"profile"}}],[11,"default_doc","","",16,{"inputs":[{"name":"profile"}],"output":{"name":"profile"}}],[11,"default_custom_build","","",16,{"inputs":[{"name":"profile"}],"output":{"name":"profile"}}],[11,"default","","",16,{"inputs":[{"name":"profile"}],"output":{"name":"profile"}}],[11,"fmt","","",16,{"inputs":[{"name":"profile"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"resolver","cargo::core","Resolution of the entire dependency graph for a crate",null,null],[3,"EncodableResolve","cargo::core::resolver","",null,null],[3,"EncodableDependency","","",null,null],[3,"EncodablePackageId","","",null,null],[3,"Resolve","","Represents a fully resolved package dependency graph. Each node in the graph\nis a package and edges represent dependencies between packages.",null,null],[4,"Method","","",null,null],[13,"Everything","","",22,null],[13,"Required","","",22,null],[12,"dev_deps","cargo::core::resolver::Method","",22,null],[12,"features","","",22,null],[12,"uses_default_features","","",22,null],[5,"resolve","cargo::core::resolver","Builds the list of all packages required to build the first argument.",null,{"inputs":[{"name":"summary"},{"name":"method"},{"name":"registry"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",23,{"inputs":[{"name":"encodableresolve"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",23,{"inputs":[{"name":"encodableresolve"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",23,{"inputs":[{"name":"encodableresolve"},{"name":"__s"}],"output":{"name":"result"}}],[11,"to_resolve","","",23,{"inputs":[{"name":"encodableresolve"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"eq","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"cmp","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"encodabledependency"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"encodabledependency"}],"output":{"name":"option"}}],[11,"lt","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"le","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"gt","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"ge","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"fmt","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",24,{"inputs":[{"name":"encodabledependency"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"cmp","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"encodablepackageid"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"encodablepackageid"}],"output":{"name":"option"}}],[11,"lt","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"le","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"gt","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"ge","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",25,{"inputs":[{"name":"encodablepackageid"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",26,{"inputs":[{"name":"resolve"},{"name":"s"}],"output":{"name":"result"}}],[6,"Metadata","","",null,null],[11,"clone","","",26,{"inputs":[{"name":"resolve"}],"output":{"name":"resolve"}}],[11,"eq","","",26,{"inputs":[{"name":"resolve"},{"name":"resolve"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"resolve"},{"name":"resolve"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"method"}],"output":{"name":"method"}}],[11,"copy_metadata","","",26,{"inputs":[{"name":"resolve"},{"name":"resolve"}],"output":null}],[11,"iter","","",26,{"inputs":[{"name":"resolve"}],"output":{"name":"nodes"}}],[11,"root","","",26,{"inputs":[{"name":"resolve"}],"output":{"name":"packageid"}}],[11,"deps","","",26,{"inputs":[{"name":"resolve"},{"name":"packageid"}],"output":{"name":"option"}}],[11,"features","","",26,{"inputs":[{"name":"resolve"},{"name":"packageid"}],"output":{"name":"option"}}],[11,"query","","",26,{"inputs":[{"name":"resolve"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",26,{"inputs":[{"name":"resolve"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"summary","cargo::core","",null,null],[3,"Summary","cargo::core::summary","Subset of a `Manifest`. Contains only the most important informations about\na package.",null,null],[8,"SummaryVec","","",null,null],[10,"names","","",27,{"inputs":[{"name":"summaryvec"}],"output":{"name":"vec"}}],[11,"clone","","",28,{"inputs":[{"name":"summary"}],"output":{"name":"summary"}}],[11,"fmt","","",28,{"inputs":[{"name":"summary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",28,{"inputs":[{"name":"summary"},{"name":"packageid"},{"name":"vec"},{"name":"hashmap"}],"output":{"name":"cargoresult"}}],[11,"package_id","","",28,{"inputs":[{"name":"summary"}],"output":{"name":"packageid"}}],[11,"name","","",28,{"inputs":[{"name":"summary"}],"output":{"name":"str"}}],[11,"version","","",28,{"inputs":[{"name":"summary"}],"output":{"name":"version"}}],[11,"source_id","","",28,{"inputs":[{"name":"summary"}],"output":{"name":"sourceid"}}],[11,"dependencies","","",28,null],[11,"features","","",28,{"inputs":[{"name":"summary"}],"output":{"name":"hashmap"}}],[11,"override_id","","",28,{"inputs":[{"name":"summary"},{"name":"packageid"}],"output":{"name":"summary"}}],[11,"map_dependencies","","",28,{"inputs":[{"name":"summary"},{"name":"f"}],"output":{"name":"summary"}}],[11,"eq","","",28,{"inputs":[{"name":"summary"},{"name":"summary"}],"output":{"name":"bool"}}],[11,"names","collections::vec","",29,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[0,"shell","cargo::core","",null,null],[3,"ShellConfig","cargo::core::shell","",null,null],[12,"color_config","","",30,null],[12,"tty","","",30,null],[3,"Shell","","",null,null],[3,"MultiShell","","",null,null],[4,"Verbosity","","",null,null],[13,"Verbose","","",31,null],[13,"Normal","","",31,null],[13,"Quiet","","",31,null],[4,"ColorConfig","","",null,null],[13,"Auto","","",32,null],[13,"Always","","",32,null],[13,"Never","","",32,null],[11,"eq","","",31,{"inputs":[{"name":"verbosity"},{"name":"verbosity"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"verbosity"},{"name":"verbosity"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"verbosity"}],"output":{"name":"verbosity"}}],[11,"eq","","",32,{"inputs":[{"name":"colorconfig"},{"name":"colorconfig"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"colorconfig"},{"name":"colorconfig"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"colorconfig"}],"output":{"name":"colorconfig"}}],[11,"clone","","",30,{"inputs":[{"name":"shellconfig"}],"output":{"name":"shellconfig"}}],[11,"new","","",33,{"inputs":[{"name":"multishell"},{"name":"shell"},{"name":"shell"},{"name":"verbosity"}],"output":{"name":"multishell"}}],[11,"out","","",33,{"inputs":[{"name":"multishell"}],"output":{"name":"shell"}}],[11,"err","","",33,{"inputs":[{"name":"multishell"}],"output":{"name":"shell"}}],[11,"say","","",33,{"inputs":[{"name":"multishell"},{"name":"t"},{"name":"color"}],"output":{"name":"cargoresult"}}],[11,"status","","",33,{"inputs":[{"name":"multishell"},{"name":"t"},{"name":"u"}],"output":{"name":"cargoresult"}}],[11,"verbose","","",33,{"inputs":[{"name":"multishell"},{"name":"f"}],"output":{"name":"cargoresult"}}],[11,"concise","","",33,{"inputs":[{"name":"multishell"},{"name":"f"}],"output":{"name":"cargoresult"}}],[11,"error","","",33,{"inputs":[{"name":"multishell"},{"name":"t"}],"output":{"name":"cargoresult"}}],[11,"warn","","",33,{"inputs":[{"name":"multishell"},{"name":"t"}],"output":{"name":"cargoresult"}}],[11,"set_verbosity","","",33,{"inputs":[{"name":"multishell"},{"name":"bool"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[11,"set_verbose","","shortcut for commands that don't have both --verbose and --quiet",33,{"inputs":[{"name":"multishell"},{"name":"bool"}],"output":null}],[11,"set_color_config","","",33,{"inputs":[{"name":"multishell"},{"name":"option"}],"output":{"name":"cargoresult"}}],[11,"get_verbose","","",33,{"inputs":[{"name":"multishell"}],"output":{"name":"verbosity"}}],[11,"create","","",34,{"inputs":[{"name":"shell"},{"name":"box"},{"name":"shellconfig"}],"output":{"name":"shell"}}],[11,"set_color_config","","",34,{"inputs":[{"name":"shell"},{"name":"colorconfig"}],"output":null}],[11,"say","","",34,{"inputs":[{"name":"shell"},{"name":"t"},{"name":"color"}],"output":{"name":"cargoresult"}}],[11,"say_status","","",34,{"inputs":[{"name":"shell"},{"name":"t"},{"name":"u"},{"name":"color"}],"output":{"name":"cargoresult"}}],[11,"write","","",34,null],[11,"flush","","",34,{"inputs":[{"name":"shell"}],"output":{"name":"result"}}],[0,"registry","cargo::core","",null,null],[3,"PackageRegistry","cargo::core::registry","This structure represents a registry of known packages. It internally\ncontains a number of `Box<Source>` instances which are used to load a\n`Package` from.",null,null],[8,"Registry","","Source of information about a group of packages.",null,null],[10,"query","","Attempt to find the packages that match a dependency request.",35,{"inputs":[{"name":"registry"},{"name":"dependency"}],"output":{"name":"cargoresult"}}],[11,"query","collections::vec","",29,{"inputs":[{"name":"vec"},{"name":"dependency"}],"output":{"name":"cargoresult"}}],[11,"query","","",29,{"inputs":[{"name":"vec"},{"name":"dependency"}],"output":{"name":"cargoresult"}}],[11,"new","cargo::core::registry","",36,{"inputs":[{"name":"packageregistry"},{"name":"config"}],"output":{"name":"packageregistry"}}],[11,"get","","",36,null],[11,"move_sources","","",36,{"inputs":[{"name":"packageregistry"}],"output":{"name":"sourcemap"}}],[11,"add_sources","","",36,null],[11,"add_preloaded","","",36,{"inputs":[{"name":"packageregistry"},{"name":"sourceid"},{"name":"box"}],"output":null}],[11,"add_overrides","","",36,{"inputs":[{"name":"packageregistry"},{"name":"vec"}],"output":{"name":"cargoresult"}}],[11,"register_lock","","",36,{"inputs":[{"name":"packageregistry"},{"name":"packageid"},{"name":"vec"}],"output":null}],[11,"query","","",36,{"inputs":[{"name":"packageregistry"},{"name":"dependency"}],"output":{"name":"cargoresult"}}],[11,"fmt","cargo::core","",37,{"inputs":[{"name":"packageidspec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"packageidspec"},{"name":"packageidspec"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"packageidspec"},{"name":"packageidspec"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"packageidspec"}],"output":{"name":"packageidspec"}}],[11,"parse","","",37,{"inputs":[{"name":"packageidspec"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"query_str","","",37,{"inputs":[{"name":"packageidspec"},{"name":"str"},{"name":"i"}],"output":{"name":"cargoresult"}}],[11,"from_package_id","","",37,{"inputs":[{"name":"packageidspec"},{"name":"packageid"}],"output":{"name":"packageidspec"}}],[11,"name","","",37,{"inputs":[{"name":"packageidspec"}],"output":{"name":"str"}}],[11,"version","","",37,{"inputs":[{"name":"packageidspec"}],"output":{"name":"option"}}],[11,"url","","",37,{"inputs":[{"name":"packageidspec"}],"output":{"name":"option"}}],[11,"matches","","",37,{"inputs":[{"name":"packageidspec"},{"name":"packageid"}],"output":{"name":"bool"}}],[11,"query","","",37,{"inputs":[{"name":"packageidspec"},{"name":"i"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",37,{"inputs":[{"name":"packageidspec"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"ops","cargo","",null,null],[3,"CleanOptions","cargo::ops","",null,null],[12,"spec","","",38,null],[12,"target","","",38,null],[12,"config","","",38,null],[12,"release","","",38,null],[3,"CompileOptions","","Contains information about how a package should be compiled.",null,null],[12,"config","","",39,null],[12,"jobs","","Number of concurrent jobs to use.",39,null],[12,"target","","The target platform to compile for (example: `i686-unknown-linux-gnu`).",39,null],[12,"features","","Extra features to build for the root package",39,null],[12,"no_default_features","","Flag if the default feature should be built for the root package",39,null],[12,"spec","","Root package to build (if None it's the current one)",39,null],[12,"filter","","Filter to apply to the root package to select which targets will be\nbuilt.",39,null],[12,"exec_engine","","Engine which drives compilation",39,null],[12,"release","","Whether this is a release build or not",39,null],[12,"mode","","Mode for this compile.",39,null],[12,"target_rustdoc_args","","Extra arguments to be passed to rustdoc (for main crate and dependencies)",39,null],[12,"target_rustc_args","","The specified target will be compiled with all the available arguments,\nnote that this only accounts for the *final* invocation of rustc",39,null],[3,"Compilation","","A structure returning the result of a compilation.",null,null],[12,"libraries","","All libraries which were built for a package.",40,null],[12,"tests","","An array of all tests created during this compilation.",40,null],[12,"binaries","","An array of all binaries created.",40,null],[12,"native_dirs","","All directires for the output of native build commands.",40,null],[12,"root_output","","Root output directory (for the local package's artifacts)",40,null],[12,"deps_output","","Output directory for rust dependencies",40,null],[12,"extra_env","","Extra environment variables that were passed to compilations and should\nbe passed to future invocations of programs.",40,null],[12,"to_doc_test","","",40,null],[12,"cfgs","","Features enabled during this compilation.",40,null],[3,"Layout","","",null,null],[3,"Unit","","",null,null],[12,"pkg","","",41,null],[12,"target","","",41,null],[12,"profile","","",41,null],[12,"kind","","",41,null],[3,"Context","","",null,null],[12,"config","","",42,null],[12,"resolve","","",42,null],[12,"sources","","",42,null],[12,"compilation","","",42,null],[12,"build_state","","",42,null],[12,"build_explicit_deps","","",42,null],[12,"exec_engine","","",42,null],[12,"fingerprints","","",42,null],[12,"compiled","","",42,null],[12,"build_config","","",42,null],[12,"build_scripts","","",42,null],[3,"LayoutProxy","","",null,null],[3,"BuildOutput","","Contains the parsed output of a custom build script.",null,null],[12,"library_paths","","Paths to pass to rustc with the `-L` flag",43,null],[12,"library_links","","Names and link kinds of libraries, suitable for the `-l` flag",43,null],[12,"cfgs","","Various `--cfg` flags to pass to the compiler",43,null],[12,"metadata","","Metadata to pass to the immediate dependencies",43,null],[12,"rerun_if_changed","","Glob paths to trigger a rerun of this build script.",43,null],[3,"BuildConfig","","",null,null],[12,"host","","",44,null],[12,"target","","",44,null],[12,"jobs","","",44,null],[12,"requested_target","","",44,null],[12,"exec_engine","","",44,null],[12,"release","","",44,null],[12,"doc_all","","",44,null],[3,"TargetConfig","","",null,null],[12,"ar","","",45,null],[12,"linker","","",45,null],[12,"overrides","","",45,null],[3,"CommandPrototype","","Prototype for a command that must be executed.",null,null],[3,"ProcessEngine","","Default implementation of `ExecEngine`.",null,null],[3,"NewOptions","","",null,null],[12,"version_control","","",46,null],[12,"bin","","",46,null],[12,"path","","",46,null],[12,"name","","",46,null],[3,"DocOptions","","",null,null],[12,"open_result","","",47,null],[12,"compile_opts","","",47,null],[3,"UpdateOptions","","",null,null],[12,"config","","",48,null],[12,"to_update","","",48,null],[12,"precise","","",48,null],[12,"aggressive","","",48,null],[3,"TestOptions","","",null,null],[12,"compile_opts","","",49,null],[12,"no_run","","",49,null],[12,"no_fail_fast","","",49,null],[3,"RegistryConfig","","",null,null],[12,"index","","",50,null],[12,"token","","",50,null],[3,"OwnersOptions","","",null,null],[12,"krate","","",51,null],[12,"token","","",51,null],[12,"index","","",51,null],[12,"to_add","","",51,null],[12,"to_remove","","",51,null],[12,"list","","",51,null],[3,"OutputMetadataOptions","","",null,null],[12,"features","","",52,null],[12,"manifest_path","","",52,null],[12,"no_default_features","","",52,null],[12,"no_deps","","",52,null],[12,"version","","",52,null],[3,"ExportInfo","","",null,null],[4,"CompileFilter","","",null,null],[13,"Everything","","",53,null],[13,"Only","","",53,null],[12,"lib","cargo::ops::CompileFilter","",53,null],[12,"bins","","",53,null],[12,"examples","","",53,null],[12,"tests","","",53,null],[12,"benches","","",53,null],[4,"CompileMode","cargo::ops","",null,null],[13,"Test","","",54,null],[13,"Build","","",54,null],[13,"Bench","","",54,null],[13,"Doc","","",54,null],[12,"deps","cargo::ops::CompileMode","",54,null],[4,"Kind","cargo::ops","",null,null],[13,"Host","","",55,null],[13,"Target","","",55,null],[4,"CommandType","","",null,null],[13,"Rustc","","",56,null],[13,"Rustdoc","","",56,null],[13,"Target","","The command is to be executed for the target architecture.",56,null],[13,"Host","","The command is to be executed for the host architecture.",56,null],[4,"VersionControl","","",null,null],[13,"Git","","",57,null],[13,"Hg","","",57,null],[13,"NoVcs","","",57,null],[5,"clean","","Cleans the project from build artifacts.",null,{"inputs":[{"name":"path"},{"name":"cleanoptions"}],"output":{"name":"cargoresult"}}],[5,"compile","","",null,{"inputs":[{"name":"path"},{"name":"compileoptions"}],"output":{"name":"cargoresult"}}],[5,"compile_pkg","","",null,{"inputs":[{"name":"package"},{"name":"option"},{"name":"compileoptions"}],"output":{"name":"cargoresult"}}],[5,"resolve_dependencies","","",null,{"inputs":[{"name":"package"},{"name":"config"},{"name":"option"},{"name":"vec"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[5,"read_manifest","","",null,null],[5,"read_package","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"read_packages","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"compile_targets","","",null,{"inputs":[{"name":"packagestobuild"},{"name":"packageset"},{"name":"resolve"},{"name":"sourcemap"},{"name":"config"},{"name":"buildconfig"},{"name":"profiles"}],"output":{"name":"cargoresult"}}],[5,"run","","",null,null],[5,"install","","",null,{"inputs":[{"name":"option"},{"name":"option"},{"name":"sourceid"},{"name":"option"},{"name":"compileoptions"}],"output":{"name":"cargoresult"}}],[5,"install_list","","",null,{"inputs":[{"name":"option"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"uninstall","","",null,null],[5,"new","","",null,{"inputs":[{"name":"newoptions"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"init","","",null,{"inputs":[{"name":"newoptions"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"doc","","",null,{"inputs":[{"name":"path"},{"name":"docoptions"}],"output":{"name":"cargoresult"}}],[5,"generate_lockfile","","",null,{"inputs":[{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"update_lockfile","","",null,{"inputs":[{"name":"path"},{"name":"updateoptions"}],"output":{"name":"cargoresult"}}],[5,"load_lockfile","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[5,"load_pkg_lockfile","","",null,{"inputs":[{"name":"package"}],"output":{"name":"cargoresult"}}],[5,"write_lockfile","","",null,{"inputs":[{"name":"path"},{"name":"resolve"}],"output":{"name":"cargoresult"}}],[5,"write_pkg_lockfile","","",null,{"inputs":[{"name":"package"},{"name":"resolve"}],"output":{"name":"cargoresult"}}],[5,"run_tests","","",null,null],[5,"run_benches","","",null,null],[5,"package","","",null,{"inputs":[{"name":"path"},{"name":"config"},{"name":"bool"},{"name":"bool"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[5,"publish","","",null,{"inputs":[{"name":"path"},{"name":"config"},{"name":"option"},{"name":"option"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[5,"registry_configuration","","",null,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"registry_login","","",null,{"inputs":[{"name":"config"},{"name":"string"}],"output":{"name":"cargoresult"}}],[5,"search","","",null,{"inputs":[{"name":"str"},{"name":"config"},{"name":"option"}],"output":{"name":"cargoresult"}}],[5,"http_proxy_exists","","Determine if an http proxy exists.",null,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"http_handle","","Create a new HTTP handle with appropriate global configuration for cargo.",null,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"modify_owners","","",null,{"inputs":[{"name":"config"},{"name":"ownersoptions"}],"output":{"name":"cargoresult"}}],[5,"yank","","",null,{"inputs":[{"name":"config"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[5,"fetch","","Executes `cargo fetch`.",null,{"inputs":[{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"get_resolved_packages","","",null,{"inputs":[{"name":"resolve"},{"name":"packageregistry"}],"output":{"name":"cargoresult"}}],[5,"pkgid","","",null,{"inputs":[{"name":"path"},{"name":"option"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"resolve_pkg","","Resolve all dependencies for the specified `package` using the previous\nlockfile as a guide if present.",null,{"inputs":[{"name":"packageregistry"},{"name":"package"}],"output":{"name":"cargoresult"}}],[5,"resolve_with_previous","","Resolve all dependencies for a package using an optional previous instance\nof resolve to guide the resolution process.",null,{"inputs":[{"name":"packageregistry"},{"name":"package"},{"name":"method"},{"name":"option"},{"name":"option"}],"output":{"name":"cargoresult"}}],[5,"output_metadata","","Loads the manifest, resolves the dependencies of the project to the concrete\nused versions - considering overrides - and writes all dependencies in a JSON\nformat to stdout.",null,{"inputs":[{"name":"outputmetadataoptions"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"eq","","",54,{"inputs":[{"name":"compilemode"},{"name":"compilemode"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"compilemode"},{"name":"compilemode"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"compilemode"}],"output":{"name":"compilemode"}}],[11,"new","","",53,null],[11,"matches","","",53,{"inputs":[{"name":"compilefilter"},{"name":"target"}],"output":{"name":"bool"}}],[11,"eq","","",57,{"inputs":[{"name":"versioncontrol"},{"name":"versioncontrol"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"versioncontrol"},{"name":"versioncontrol"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"versioncontrol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"versioncontrol"}],"output":{"name":"versioncontrol"}}],[11,"decode","","",57,{"inputs":[{"name":"versioncontrol"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",58,{"inputs":[{"name":"exportinfo"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",41,null],[11,"eq","","",41,{"inputs":[{"name":"unit"},{"name":"unit"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"unit"},{"name":"unit"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"unit"}],"output":{"name":"unit"}}],[11,"new","","",42,{"inputs":[{"name":"context"},{"name":"resolve"},{"name":"sourcemap"},{"name":"packageset"},{"name":"config"},{"name":"layout"},{"name":"option"},{"name":"buildconfig"},{"name":"profiles"}],"output":{"name":"cargoresult"}}],[11,"prepare","","Prepare this context, ensuring that all filesystem directories are in\nplace.",42,{"inputs":[{"name":"context"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"layout","","Returns the appropriate directory layout for either a plugin or not.",42,{"inputs":[{"name":"context"},{"name":"package"},{"name":"kind"}],"output":{"name":"layoutproxy"}}],[11,"out_dir","","Returns the appropriate output directory for the specified package and\ntarget.",42,{"inputs":[{"name":"context"},{"name":"unit"}],"output":{"name":"pathbuf"}}],[11,"staticlib","","Return the (prefix, suffix) pair for static libraries.",42,{"inputs":[{"name":"context"},{"name":"kind"}],"output":{"name":"cargoresult"}}],[11,"target_triple","","Return the target triple which this context is targeting.",42,{"inputs":[{"name":"context"}],"output":{"name":"str"}}],[11,"target_metadata","","Get the metadata for a target in a specific profile",42,{"inputs":[{"name":"context"},{"name":"unit"}],"output":{"name":"option"}}],[11,"file_stem","","Returns the file stem for a given target/profile combo",42,{"inputs":[{"name":"context"},{"name":"unit"}],"output":{"name":"string"}}],[11,"target_filenames","","Return the filenames that the given target for the given profile will\ngenerate.",42,{"inputs":[{"name":"context"},{"name":"unit"}],"output":{"name":"cargoresult"}}],[11,"dep_targets","","For a package, return all targets which are registered as dependencies\nfor that package.",42,{"inputs":[{"name":"context"},{"name":"unit"}],"output":{"name":"vec"}}],[11,"dep_run_custom_build","","Returns the dependencies needed to run a build script.",42,{"inputs":[{"name":"context"},{"name":"unit"}],"output":{"name":"vec"}}],[11,"get_package","","Gets a package for the given package id.",42,{"inputs":[{"name":"context"},{"name":"packageid"}],"output":{"name":"package"}}],[11,"linker","","Get the user-specified linker for a particular host or target",42,{"inputs":[{"name":"context"},{"name":"kind"}],"output":{"name":"option"}}],[11,"ar","","Get the user-specified `ar` program for a particular host or target",42,{"inputs":[{"name":"context"},{"name":"kind"}],"output":{"name":"option"}}],[11,"jobs","","Number of jobs specified for this build",42,{"inputs":[{"name":"context"}],"output":{"name":"u32"}}],[11,"requested_target","","Requested (not actual) target for the build",42,{"inputs":[{"name":"context"}],"output":{"name":"option"}}],[11,"lib_profile","","",42,{"inputs":[{"name":"context"},{"name":"packageid"}],"output":{"name":"profile"}}],[11,"build_script_profile","","",42,{"inputs":[{"name":"context"},{"name":"packageid"}],"output":{"name":"profile"}}],[11,"new","","",40,{"inputs":[{"name":"compilation"},{"name":"config"}],"output":{"name":"compilation"}}],[11,"rustc_process","","See `process`.",40,{"inputs":[{"name":"compilation"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"rustdoc_process","","See `process`.",40,{"inputs":[{"name":"compilation"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"target_process","","See `process`.",40,{"inputs":[{"name":"compilation"},{"name":"t"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"host_process","","See `process`.",40,{"inputs":[{"name":"compilation"},{"name":"t"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"process","","Prepares a new process with an appropriate environment to run against\nthe artifacts produced by the build process.",40,{"inputs":[{"name":"compilation"},{"name":"commandtype"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"hash","","",43,null],[11,"fmt","","",43,{"inputs":[{"name":"buildoutput"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"buildoutput"}],"output":{"name":"buildoutput"}}],[11,"parse_file","","",43,{"inputs":[{"name":"buildoutput"},{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"parse","","",43,{"inputs":[{"name":"buildoutput"},{"name":"str"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"parse_rustc_flags","","",43,{"inputs":[{"name":"buildoutput"},{"name":"str"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"clone","","",59,{"inputs":[{"name":"processengine"}],"output":{"name":"processengine"}}],[11,"exec","","",59,{"inputs":[{"name":"processengine"},{"name":"commandprototype"}],"output":{"name":"result"}}],[11,"exec_with_output","","",59,{"inputs":[{"name":"processengine"},{"name":"commandprototype"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"commandprototype"}],"output":{"name":"commandprototype"}}],[11,"new","","",60,{"inputs":[{"name":"commandprototype"},{"name":"commandtype"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"get_type","","",60,{"inputs":[{"name":"commandprototype"}],"output":{"name":"commandtype"}}],[11,"arg","","",60,{"inputs":[{"name":"commandprototype"},{"name":"t"}],"output":{"name":"commandprototype"}}],[11,"args","","",60,null],[11,"cwd","","",60,{"inputs":[{"name":"commandprototype"},{"name":"t"}],"output":{"name":"commandprototype"}}],[11,"env","","",60,{"inputs":[{"name":"commandprototype"},{"name":"str"},{"name":"t"}],"output":{"name":"commandprototype"}}],[11,"get_args","","",60,null],[11,"get_cwd","","",60,{"inputs":[{"name":"commandprototype"}],"output":{"name":"option"}}],[11,"get_env","","",60,{"inputs":[{"name":"commandprototype"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_envs","","",60,{"inputs":[{"name":"commandprototype"}],"output":{"name":"hashmap"}}],[11,"into_process_builder","","",60,{"inputs":[{"name":"commandprototype"}],"output":{"name":"processbuilder"}}],[11,"fmt","","",60,{"inputs":[{"name":"commandprototype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"commandtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"commandtype"}],"output":{"name":"commandtype"}}],[11,"new","","",61,{"inputs":[{"name":"layout"},{"name":"config"},{"name":"package"},{"name":"option"},{"name":"str"}],"output":{"name":"layout"}}],[11,"at","","",61,{"inputs":[{"name":"layout"},{"name":"pathbuf"}],"output":{"name":"layout"}}],[11,"prepare","","",61,{"inputs":[{"name":"layout"}],"output":{"name":"result"}}],[11,"dest","","",61,{"inputs":[{"name":"layout"}],"output":{"name":"path"}}],[11,"deps","","",61,{"inputs":[{"name":"layout"}],"output":{"name":"path"}}],[11,"examples","","",61,{"inputs":[{"name":"layout"}],"output":{"name":"path"}}],[11,"fingerprint","","",61,{"inputs":[{"name":"layout"},{"name":"package"}],"output":{"name":"pathbuf"}}],[11,"build","","",61,{"inputs":[{"name":"layout"},{"name":"package"}],"output":{"name":"pathbuf"}}],[11,"build_out","","",61,{"inputs":[{"name":"layout"},{"name":"package"}],"output":{"name":"pathbuf"}}],[11,"new","","",62,{"inputs":[{"name":"layoutproxy"},{"name":"layout"},{"name":"bool"}],"output":{"name":"layoutproxy"}}],[11,"root","","",62,{"inputs":[{"name":"layoutproxy"}],"output":{"name":"path"}}],[11,"deps","","",62,{"inputs":[{"name":"layoutproxy"}],"output":{"name":"path"}}],[11,"examples","","",62,{"inputs":[{"name":"layoutproxy"}],"output":{"name":"path"}}],[11,"build","","",62,{"inputs":[{"name":"layoutproxy"},{"name":"package"}],"output":{"name":"pathbuf"}}],[11,"build_out","","",62,{"inputs":[{"name":"layoutproxy"},{"name":"package"}],"output":{"name":"pathbuf"}}],[11,"proxy","","",62,{"inputs":[{"name":"layoutproxy"}],"output":{"name":"layout"}}],[11,"cmp","","",55,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",55,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"option"}}],[11,"lt","","",55,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"le","","",55,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"gt","","",55,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ge","","",55,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"kind"}],"output":{"name":"kind"}}],[11,"fmt","","",55,{"inputs":[{"name":"kind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",55,null],[11,"eq","","",55,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"buildconfig"}],"output":{"name":"buildconfig"}}],[11,"default","","",44,{"inputs":[{"name":"buildconfig"}],"output":{"name":"buildconfig"}}],[11,"default","","",45,{"inputs":[{"name":"targetconfig"}],"output":{"name":"targetconfig"}}],[11,"clone","","",45,{"inputs":[{"name":"targetconfig"}],"output":{"name":"targetconfig"}}],[8,"ExecEngine","","Trait for objects that can execute commands.",null,null],[10,"exec","","",63,{"inputs":[{"name":"execengine"},{"name":"commandprototype"}],"output":{"name":"result"}}],[10,"exec_with_output","","",63,{"inputs":[{"name":"execengine"},{"name":"commandprototype"}],"output":{"name":"result"}}],[0,"sources","cargo","",null,null],[3,"GitSource","cargo::sources","",null,null],[0,"path","","",null,null],[3,"PathSource","cargo::sources::path","",null,null],[11,"for_path","","",64,{"inputs":[{"name":"pathsource"},{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"new","","Invoked with an absolute path to a directory that contains a Cargo.toml.\nThe source will read the manifest and find any other packages contained\nin the directory structure reachable by the root manifest.",64,{"inputs":[{"name":"pathsource"},{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"pathsource"}}],[11,"root_package","","",64,{"inputs":[{"name":"pathsource"}],"output":{"name":"cargoresult"}}],[11,"read_packages","","",64,{"inputs":[{"name":"pathsource"}],"output":{"name":"cargoresult"}}],[11,"list_files","","List all files relevant to building this package inside this source.",64,{"inputs":[{"name":"pathsource"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",64,{"inputs":[{"name":"pathsource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"query","","",64,{"inputs":[{"name":"pathsource"},{"name":"dependency"}],"output":{"name":"cargoresult"}}],[11,"update","","",64,{"inputs":[{"name":"pathsource"}],"output":{"name":"cargoresult"}}],[11,"download","","",64,null],[11,"get","","",64,null],[11,"fingerprint","","",64,{"inputs":[{"name":"pathsource"},{"name":"package"}],"output":{"name":"cargoresult"}}],[0,"git","cargo::sources","",null,null],[3,"GitRemote","cargo::sources::git","GitRemote represents a remote repository. It gets cloned into a local\nGitDatabase.",null,null],[3,"GitDatabase","","GitDatabase is a local clone of a remote repository's database. Multiple\nGitCheckouts can be cloned from this GitDatabase.",null,null],[3,"GitCheckout","","GitCheckout is a local checkout of a particular revision. Calling\n`clone_into` with a reference will resolve the reference into a revision,\nand return a CargoError if no revision for that reference was found.",null,null],[3,"GitRevision","","",null,null],[3,"GitSource","","",null,null],[5,"fetch","","",null,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"str"}],"output":{"name":"cargoresult"}}],[5,"canonicalize_url","","",null,{"inputs":[{"name":"url"}],"output":{"name":"url"}}],[11,"fmt","","",65,{"inputs":[{"name":"gitrevision"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"gitrevision"}],"output":{"name":"gitrevision"}}],[11,"eq","","",65,{"inputs":[{"name":"gitrevision"},{"name":"gitrevision"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"gitrevision"},{"name":"gitrevision"}],"output":{"name":"bool"}}],[11,"fmt","","",65,{"inputs":[{"name":"gitrevision"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",66,{"inputs":[{"name":"gitremote"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"gitremote"}],"output":{"name":"gitremote"}}],[11,"eq","","",66,{"inputs":[{"name":"gitremote"},{"name":"gitremote"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"gitremote"},{"name":"gitremote"}],"output":{"name":"bool"}}],[11,"encode","","",66,{"inputs":[{"name":"gitremote"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",67,{"inputs":[{"name":"gitdatabase"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",68,{"inputs":[{"name":"gitcheckout"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","","",66,{"inputs":[{"name":"gitremote"},{"name":"url"}],"output":{"name":"gitremote"}}],[11,"url","","",66,{"inputs":[{"name":"gitremote"}],"output":{"name":"url"}}],[11,"rev_for","","",66,{"inputs":[{"name":"gitremote"},{"name":"path"},{"name":"gitreference"}],"output":{"name":"cargoresult"}}],[11,"checkout","","",66,{"inputs":[{"name":"gitremote"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"db_at","","",66,{"inputs":[{"name":"gitremote"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"copy_to","","",67,{"inputs":[{"name":"gitdatabase"},{"name":"gitrevision"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"rev_for","","",67,{"inputs":[{"name":"gitdatabase"},{"name":"gitreference"}],"output":{"name":"cargoresult"}}],[11,"has_ref","","",67,{"inputs":[{"name":"gitdatabase"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"new","cargo::sources","",69,{"inputs":[{"name":"gitsource"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"gitsource"}}],[11,"url","","",69,{"inputs":[{"name":"gitsource"}],"output":{"name":"url"}}],[11,"read_packages","","",69,{"inputs":[{"name":"gitsource"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",69,{"inputs":[{"name":"gitsource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"query","","",69,{"inputs":[{"name":"gitsource"},{"name":"dependency"}],"output":{"name":"cargoresult"}}],[11,"update","","",69,{"inputs":[{"name":"gitsource"}],"output":{"name":"cargoresult"}}],[11,"download","","",69,null],[11,"get","","",69,null],[11,"fingerprint","","",69,{"inputs":[{"name":"gitsource"},{"name":"package"}],"output":{"name":"cargoresult"}}],[0,"registry","","A `Source` for registry-based packages.",null,null],[3,"RegistrySource","cargo::sources::registry","",null,null],[3,"RegistryConfig","","",null,null],[12,"dl","","Download endpoint for all crates. This will be appended with\n`/<crate>/<version>/download` and then will be hit with an HTTP GET\nrequest to download the tarball for a crate.",70,null],[12,"api","","API endpoint for the registry. This is what's actually hit to perform\noperations like yanks, owner modifications, publish new crates, etc.",70,null],[11,"decode","","",70,{"inputs":[{"name":"registryconfig"},{"name":"__d"}],"output":{"name":"result"}}],[11,"new","","",71,{"inputs":[{"name":"registrysource"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"registrysource"}}],[11,"url","","Get the configured default registry URL.",71,{"inputs":[{"name":"registrysource"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"default_url","","Get the default url for the registry",71,{"inputs":[{"name":"registrysource"}],"output":{"name":"string"}}],[11,"config","","Decode the configuration stored within the registry.",71,{"inputs":[{"name":"registrysource"}],"output":{"name":"cargoresult"}}],[11,"summaries","","Parse the on-disk metadata for the package provided",71,{"inputs":[{"name":"registrysource"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"query","","",71,{"inputs":[{"name":"registrysource"},{"name":"dependency"}],"output":{"name":"cargoresult"}}],[11,"update","","",71,{"inputs":[{"name":"registrysource"}],"output":{"name":"cargoresult"}}],[11,"download","","",71,null],[11,"get","","",71,null],[11,"fingerprint","","",71,{"inputs":[{"name":"registrysource"},{"name":"package"}],"output":{"name":"cargoresult"}}],[0,"util","cargo","",null,null],[3,"DependencyQueue","cargo::util","",null,null],[3,"Rustc","","",null,null],[12,"verbose_version","","",72,null],[12,"host","","",72,null],[12,"cap_lints","","",72,null],[3,"Sha256","","",null,null],[3,"GitRepo","","",null,null],[3,"HgRepo","","",null,null],[4,"Freshness","","Indication of the freshness of a package.",null,null],[13,"Fresh","","",73,null],[13,"Dirty","","",73,null],[0,"config","","",null,null],[3,"Config","cargo::util::config","",null,null],[4,"Location","","",null,null],[13,"Project","","",74,null],[13,"Global","","",74,null],[4,"ConfigValue","","",null,null],[13,"Integer","","",75,null],[13,"String","","",75,null],[13,"List","","",75,null],[13,"Table","","",75,null],[13,"Boolean","","",75,null],[5,"set_config","","",null,{"inputs":[{"name":"config"},{"name":"location"},{"name":"str"},{"name":"configvalue"}],"output":{"name":"cargoresult"}}],[11,"new","","",76,{"inputs":[{"name":"config"},{"name":"multishell"},{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"cargoresult"}}],[11,"default","","",76,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"home","","",76,{"inputs":[{"name":"config"}],"output":{"name":"path"}}],[11,"git_db_path","","",76,{"inputs":[{"name":"config"}],"output":{"name":"pathbuf"}}],[11,"git_checkout_path","","",76,{"inputs":[{"name":"config"}],"output":{"name":"pathbuf"}}],[11,"registry_index_path","","",76,{"inputs":[{"name":"config"}],"output":{"name":"pathbuf"}}],[11,"registry_cache_path","","",76,{"inputs":[{"name":"config"}],"output":{"name":"pathbuf"}}],[11,"registry_source_path","","",76,{"inputs":[{"name":"config"}],"output":{"name":"pathbuf"}}],[11,"shell","","",76,{"inputs":[{"name":"config"}],"output":{"name":"refmut"}}],[11,"rustc","","",76,{"inputs":[{"name":"config"}],"output":{"name":"path"}}],[11,"rustdoc","","",76,{"inputs":[{"name":"config"}],"output":{"name":"path"}}],[11,"rustc_info","","",76,{"inputs":[{"name":"config"}],"output":{"name":"rustc"}}],[11,"values","","",76,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"cwd","","",76,{"inputs":[{"name":"config"}],"output":{"name":"path"}}],[11,"target_dir","","",76,{"inputs":[{"name":"config"},{"name":"package"}],"output":{"name":"pathbuf"}}],[11,"set_target_dir","","",76,{"inputs":[{"name":"config"},{"name":"path"}],"output":null}],[11,"get","","",76,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_string","","",76,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_path","","",76,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_list","","",76,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_table","","",76,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_i64","","",76,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"expected","","",76,{"inputs":[{"name":"config"},{"name":"str"},{"name":"str"},{"name":"cv"}],"output":{"name":"cargoresult"}}],[11,"decode","","",74,{"inputs":[{"name":"location"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",74,{"inputs":[{"name":"location"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"location"}],"output":{"name":"location"}}],[11,"eq","","",74,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"decode","","",75,{"inputs":[{"name":"configvalue"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"configvalue"}],"output":{"name":"configvalue"}}],[11,"eq","","",75,{"inputs":[{"name":"configvalue"},{"name":"configvalue"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"configvalue"},{"name":"configvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"configvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",75,{"inputs":[{"name":"configvalue"},{"name":"s"}],"output":{"name":"result"}}],[11,"i64","","",75,{"inputs":[{"name":"configvalue"}],"output":{"name":"cargoresult"}}],[11,"string","","",75,{"inputs":[{"name":"configvalue"}],"output":{"name":"cargoresult"}}],[11,"table","","",75,{"inputs":[{"name":"configvalue"}],"output":{"name":"cargoresult"}}],[11,"list","","",75,{"inputs":[{"name":"configvalue"}],"output":{"name":"cargoresult"}}],[11,"boolean","","",75,{"inputs":[{"name":"configvalue"}],"output":{"name":"cargoresult"}}],[11,"desc","","",75,{"inputs":[{"name":"configvalue"}],"output":{"name":"str"}}],[11,"definition_path","","",75,{"inputs":[{"name":"configvalue"}],"output":{"name":"path"}}],[0,"errors","cargo::util","",null,null],[3,"ProcessError","cargo::util::errors","",null,null],[12,"desc","","",77,null],[12,"exit","","",77,null],[12,"output","","",77,null],[3,"CargoTestError","","Error when testcases fail",null,null],[12,"desc","","",78,null],[12,"exit","","",78,null],[12,"causes","","",78,null],[3,"Human","","",null,null],[3,"CliError","","",null,null],[12,"error","","",79,null],[12,"unknown","","",79,null],[12,"exit_code","","",79,null],[5,"process_error","","",null,{"inputs":[{"name":"str"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"processerror"}}],[5,"internal_error","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"box"}}],[5,"internal","","",null,{"inputs":[{"name":"s"}],"output":{"name":"box"}}],[5,"human","","",null,{"inputs":[{"name":"s"}],"output":{"name":"box"}}],[5,"caused_human","","",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"box"}}],[6,"CargoResult","","",null,null],[6,"CliResult","","",null,null],[8,"CargoError","","",null,null],[11,"is_human","","",80,{"inputs":[{"name":"cargoerror"}],"output":{"name":"bool"}}],[11,"cargo_cause","","",80,{"inputs":[{"name":"cargoerror"}],"output":{"name":"option"}}],[8,"ChainError","","",null,null],[10,"chain_error","","",81,{"inputs":[{"name":"chainerror"},{"name":"f"}],"output":{"name":"cargoresult"}}],[11,"description","alloc::boxed","",11,{"inputs":[{"name":"box"}],"output":{"name":"str"}}],[11,"cause","","",11,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"is_human","","",11,{"inputs":[{"name":"box"}],"output":{"name":"bool"}}],[11,"cargo_cause","","",11,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"chain_error","core::result","",82,{"inputs":[{"name":"result"},{"name":"c"}],"output":{"name":"cargoresult"}}],[11,"chain_error","alloc::boxed","",11,{"inputs":[{"name":"box"},{"name":"c"}],"output":{"name":"cargoresult"}}],[11,"chain_error","core::option","",83,{"inputs":[{"name":"option"},{"name":"c"}],"output":{"name":"cargoresult"}}],[11,"description","cargo::util::errors","",77,{"inputs":[{"name":"processerror"}],"output":{"name":"str"}}],[11,"cause","","",77,{"inputs":[{"name":"processerror"}],"output":{"name":"option"}}],[11,"fmt","","",77,{"inputs":[{"name":"processerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"processerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",78,{"inputs":[{"name":"cargotesterror"},{"name":"vec"}],"output":{"name":"self"}}],[11,"fmt","","",78,{"inputs":[{"name":"cargotesterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"cargotesterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",78,{"inputs":[{"name":"cargotesterror"}],"output":{"name":"str"}}],[11,"cause","","",78,{"inputs":[{"name":"cargotesterror"}],"output":{"name":"option"}}],[11,"fmt","","",84,{"inputs":[{"name":"human"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",84,{"inputs":[{"name":"human"}],"output":{"name":"str"}}],[11,"cause","","",84,{"inputs":[{"name":"human"}],"output":{"name":"option"}}],[11,"fmt","","",84,{"inputs":[{"name":"human"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_human","","",84,{"inputs":[{"name":"human"}],"output":{"name":"bool"}}],[11,"cargo_cause","","",84,{"inputs":[{"name":"human"}],"output":{"name":"option"}}],[11,"fmt","","",79,{"inputs":[{"name":"clierror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",79,{"inputs":[{"name":"clierror"}],"output":{"name":"str"}}],[11,"cause","","",79,{"inputs":[{"name":"clierror"}],"output":{"name":"option"}}],[11,"fmt","","",79,{"inputs":[{"name":"clierror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",79,{"inputs":[{"name":"clierror"},{"name":"str"},{"name":"i32"}],"output":{"name":"clierror"}}],[11,"from_error","","",79,{"inputs":[{"name":"clierror"},{"name":"e"},{"name":"i32"}],"output":{"name":"clierror"}}],[11,"from_boxed","","",79,{"inputs":[{"name":"clierror"},{"name":"box"},{"name":"i32"}],"output":{"name":"clierror"}}],[11,"from","","",79,{"inputs":[{"name":"clierror"},{"name":"box"}],"output":{"name":"clierror"}}],[11,"from","alloc::boxed","",11,{"inputs":[{"name":"box"},{"name":"reqparseerror"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"error"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"processerror"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"error"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"decodererror"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"encodererror"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"errcode"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"clierror"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"error"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"parseerror"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"decodeerror"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"nulerror"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"error"}],"output":{"name":"box"}}],[11,"from","","",11,{"inputs":[{"name":"box"},{"name":"human"}],"output":{"name":"box"}}],[0,"graph","cargo::util","",null,null],[3,"Graph","cargo::util::graph","",null,null],[6,"Nodes","","",null,null],[6,"Edges","","",null,null],[11,"new","","",85,{"inputs":[{"name":"graph"}],"output":{"name":"graph"}}],[11,"add","","",85,null],[11,"link","","",85,{"inputs":[{"name":"graph"},{"name":"n"},{"name":"n"}],"output":null}],[11,"get_nodes","","",85,{"inputs":[{"name":"graph"}],"output":{"name":"hashmap"}}],[11,"edges","","",85,{"inputs":[{"name":"graph"},{"name":"n"}],"output":{"name":"option"}}],[11,"sort","","",85,{"inputs":[{"name":"graph"}],"output":{"name":"option"}}],[11,"iter","","",85,{"inputs":[{"name":"graph"}],"output":{"name":"nodes"}}],[11,"fmt","","",85,{"inputs":[{"name":"graph"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",85,{"inputs":[{"name":"graph"},{"name":"graph"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"graph"}],"output":{"name":"graph"}}],[0,"hex","cargo::util","",null,null],[5,"to_hex","cargo::util::hex","",null,{"inputs":[{"name":"u64"}],"output":{"name":"string"}}],[5,"hash_u64","","",null,{"inputs":[{"name":"h"}],"output":{"name":"u64"}}],[5,"short_hash","","",null,{"inputs":[{"name":"h"}],"output":{"name":"string"}}],[0,"important_paths","cargo::util","",null,null],[5,"find_project","cargo::util::important_paths","Iteratively search for `file` in `pwd` and its parents, returning\nthe path of the directory.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[5,"find_project_manifest","","Iteratively search for `file` in `pwd` and its parents, returning\nthe path to the file.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[5,"find_root_manifest_for_wd","","Find the root Cargo.toml",null,{"inputs":[{"name":"option"},{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"find_project_manifest_exact","","Return the path to the `file` in `pwd`, if it exists.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[0,"paths","cargo::util","",null,null],[5,"join_paths","cargo::util::paths","",null,null],[5,"dylib_path_envvar","","",null,{"inputs":[],"output":{"name":"str"}}],[5,"dylib_path","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"normalize_path","","",null,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[5,"without_prefix","","",null,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[5,"read","","",null,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"write","","",null,null],[5,"append","","",null,null],[5,"path2bytes","","",null,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"bytes2path","","",null,null],[0,"process_builder","cargo::util","",null,null],[3,"ProcessBuilder","cargo::util::process_builder","",null,null],[5,"process","","",null,{"inputs":[{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"fmt","","",86,{"inputs":[{"name":"processbuilder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"processbuilder"},{"name":"processbuilder"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"processbuilder"},{"name":"processbuilder"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"processbuilder"}],"output":{"name":"processbuilder"}}],[11,"fmt","","",86,{"inputs":[{"name":"processbuilder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"arg","","",86,{"inputs":[{"name":"processbuilder"},{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"args","","",86,null],[11,"cwd","","",86,{"inputs":[{"name":"processbuilder"},{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"env","","",86,{"inputs":[{"name":"processbuilder"},{"name":"str"},{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"env_remove","","",86,{"inputs":[{"name":"processbuilder"},{"name":"str"}],"output":{"name":"processbuilder"}}],[11,"get_args","","",86,null],[11,"get_cwd","","",86,{"inputs":[{"name":"processbuilder"}],"output":{"name":"option"}}],[11,"get_env","","",86,{"inputs":[{"name":"processbuilder"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_envs","","",86,{"inputs":[{"name":"processbuilder"}],"output":{"name":"hashmap"}}],[11,"exec","","",86,{"inputs":[{"name":"processbuilder"}],"output":{"name":"result"}}],[11,"exec_with_output","","",86,{"inputs":[{"name":"processbuilder"}],"output":{"name":"result"}}],[11,"build_command","","",86,{"inputs":[{"name":"processbuilder"}],"output":{"name":"command"}}],[0,"profile","cargo::util","",null,null],[3,"Profiler","cargo::util::profile","",null,null],[5,"start","","",null,{"inputs":[{"name":"t"}],"output":{"name":"profiler"}}],[11,"drop","","",87,{"inputs":[{"name":"profiler"}],"output":null}],[0,"to_semver","cargo::util","",null,null],[8,"ToSemver","cargo::util::to_semver","",null,null],[10,"to_semver","","",88,{"inputs":[{"name":"tosemver"}],"output":{"name":"result"}}],[11,"to_semver","semver::version","",89,{"inputs":[{"name":"version"}],"output":{"name":"result"}}],[0,"to_url","cargo::util","",null,null],[8,"ToUrl","cargo::util::to_url","",null,null],[10,"to_url","","",90,{"inputs":[{"name":"tourl"}],"output":{"name":"result"}}],[11,"to_url","url","",91,{"inputs":[{"name":"url"}],"output":{"name":"result"}}],[0,"toml","cargo::util","",null,null],[3,"Layout","cargo::util::toml","Representation of the projects file layout.",null,null],[12,"root","","",92,null],[3,"DetailedTomlDependency","","",null,null],[3,"TomlManifest","","",null,null],[3,"TomlProfiles","","",null,null],[3,"TomlProfile","","",null,null],[3,"TomlProject","","",null,null],[3,"TomlVersion","","",null,null],[4,"TomlDependency","","",null,null],[13,"Simple","","",93,null],[13,"Detailed","","",93,null],[5,"project_layout","","Returns a new `Layout` for a given root path.\nThe `root_path` represents the directory that contains the `Cargo.toml` file.",null,{"inputs":[{"name":"path"}],"output":{"name":"layout"}}],[5,"to_manifest","","",null,null],[5,"parse","","",null,{"inputs":[{"name":"str"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"clone","","",92,{"inputs":[{"name":"layout"}],"output":{"name":"layout"}}],[11,"decode","","",93,{"inputs":[{"name":"tomldependency"},{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",94,{"inputs":[{"name":"detailedtomldependency"}],"output":{"name":"detailedtomldependency"}}],[11,"clone","","",94,{"inputs":[{"name":"detailedtomldependency"}],"output":{"name":"detailedtomldependency"}}],[11,"decode","","",94,{"inputs":[{"name":"detailedtomldependency"},{"name":"__d"}],"output":{"name":"result"}}],[11,"decode","","",95,{"inputs":[{"name":"tomlmanifest"},{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",96,{"inputs":[{"name":"tomlprofiles"}],"output":{"name":"tomlprofiles"}}],[11,"clone","","",96,{"inputs":[{"name":"tomlprofiles"}],"output":{"name":"tomlprofiles"}}],[11,"decode","","",96,{"inputs":[{"name":"tomlprofiles"},{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",97,{"inputs":[{"name":"tomlprofile"}],"output":{"name":"tomlprofile"}}],[11,"clone","","",97,{"inputs":[{"name":"tomlprofile"}],"output":{"name":"tomlprofile"}}],[11,"decode","","",97,{"inputs":[{"name":"tomlprofile"},{"name":"__d"}],"output":{"name":"result"}}],[11,"decode","","",98,{"inputs":[{"name":"tomlproject"},{"name":"__d"}],"output":{"name":"result"}}],[11,"decode","","",99,{"inputs":[{"name":"tomlversion"},{"name":"d"}],"output":{"name":"result"}}],[11,"to_package_id","","",98,{"inputs":[{"name":"tomlproject"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"to_manifest","","",95,{"inputs":[{"name":"tomlmanifest"},{"name":"sourceid"},{"name":"layout"},{"name":"config"}],"output":{"name":"cargoresult"}}],[0,"lev_distance","cargo::util","",null,null],[5,"lev_distance","cargo::util::lev_distance","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[0,"job","cargo::util","Job management (mostly for windows)",null,null],[5,"setup","cargo::util::job","",null,{"inputs":[],"output":null}],[11,"fmt","cargo::util","",100,{"inputs":[{"name":"dependencyqueue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"freshness"}],"output":{"name":"freshness"}}],[11,"fmt","","",73,{"inputs":[{"name":"freshness"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"freshness"},{"name":"freshness"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"freshness"},{"name":"freshness"}],"output":{"name":"bool"}}],[11,"combine","","",73,{"inputs":[{"name":"freshness"},{"name":"freshness"}],"output":{"name":"freshness"}}],[11,"new","","Creates a new dependency queue with 0 packages.",100,{"inputs":[{"name":"dependencyqueue"}],"output":{"name":"dependencyqueue"}}],[11,"queue","","Adds a new package to this dependency queue.",100,{"inputs":[{"name":"dependencyqueue"},{"name":"context"},{"name":"freshness"},{"name":"k"},{"name":"v"}],"output":{"name":"v"}}],[11,"dequeue","","Dequeues a package that is ready to be built.",100,{"inputs":[{"name":"dependencyqueue"}],"output":{"name":"option"}}],[11,"is_empty","","Returns whether there are remaining packages to be built.",100,{"inputs":[{"name":"dependencyqueue"}],"output":{"name":"bool"}}],[11,"len","","Returns the number of remaining packages to be built.",100,{"inputs":[{"name":"dependencyqueue"}],"output":{"name":"usize"}}],[11,"finish","","Indicate that a package has been built.",100,{"inputs":[{"name":"dependencyqueue"},{"name":"k"},{"name":"freshness"}],"output":null}],[11,"new","","",101,{"inputs":[{"name":"sha256"}],"output":{"name":"sha256"}}],[11,"update","","",101,null],[11,"finish","","",101,null],[11,"drop","","",101,{"inputs":[{"name":"sha256"}],"output":null}],[11,"init","","",102,{"inputs":[{"name":"gitrepo"},{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"discover","","",102,{"inputs":[{"name":"gitrepo"},{"name":"path"},{"name":"path"}],"output":{"name":"result"}}],[11,"init","","",103,{"inputs":[{"name":"hgrepo"},{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"discover","","",103,{"inputs":[{"name":"hgrepo"},{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"new","","Run the compiler at `path` to learn varioues pieces of information about\nit.",72,{"inputs":[{"name":"rustc"},{"name":"p"}],"output":{"name":"cargoresult"}}],[11,"blank","","",72,{"inputs":[{"name":"rustc"}],"output":{"name":"rustc"}}],[8,"Dependency","","A trait for discovering the dependencies of a piece of data.",null,null],[16,"Context","","",104,null],[10,"dependencies","","",104,{"inputs":[{"name":"dependency"},{"name":"context"}],"output":{"name":"vec"}}]],"paths":[[4,"GitReference"],[8,"Source"],[3,"SourceId"],[3,"SourceMap"],[3,"SourcesMut"],[3,"SourceSet"],[3,"Package"],[3,"PackageSet"],[3,"Metadata"],[4,"PackageIdError"],[3,"PackageId"],[3,"Box"],[4,"Kind"],[3,"DependencyInner"],[3,"Dependency"],[3,"ManifestMetadata"],[3,"Profile"],[3,"Profiles"],[4,"LibKind"],[4,"TargetKind"],[3,"Manifest"],[3,"Target"],[4,"Method"],[3,"EncodableResolve"],[3,"EncodableDependency"],[3,"EncodablePackageId"],[3,"Resolve"],[8,"SummaryVec"],[3,"Summary"],[3,"Vec"],[3,"ShellConfig"],[4,"Verbosity"],[4,"ColorConfig"],[3,"MultiShell"],[3,"Shell"],[8,"Registry"],[3,"PackageRegistry"],[3,"PackageIdSpec"],[3,"CleanOptions"],[3,"CompileOptions"],[3,"Compilation"],[3,"Unit"],[3,"Context"],[3,"BuildOutput"],[3,"BuildConfig"],[3,"TargetConfig"],[3,"NewOptions"],[3,"DocOptions"],[3,"UpdateOptions"],[3,"TestOptions"],[3,"RegistryConfig"],[3,"OwnersOptions"],[3,"OutputMetadataOptions"],[4,"CompileFilter"],[4,"CompileMode"],[4,"Kind"],[4,"CommandType"],[4,"VersionControl"],[3,"ExportInfo"],[3,"ProcessEngine"],[3,"CommandPrototype"],[3,"Layout"],[3,"LayoutProxy"],[8,"ExecEngine"],[3,"PathSource"],[3,"GitRevision"],[3,"GitRemote"],[3,"GitDatabase"],[3,"GitCheckout"],[3,"GitSource"],[3,"RegistryConfig"],[3,"RegistrySource"],[3,"Rustc"],[4,"Freshness"],[4,"Location"],[4,"ConfigValue"],[3,"Config"],[3,"ProcessError"],[3,"CargoTestError"],[3,"CliError"],[8,"CargoError"],[8,"ChainError"],[4,"Result"],[4,"Option"],[3,"Human"],[3,"Graph"],[3,"ProcessBuilder"],[3,"Profiler"],[8,"ToSemver"],[3,"Version"],[8,"ToUrl"],[3,"Url"],[3,"Layout"],[4,"TomlDependency"],[3,"DetailedTomlDependency"],[3,"TomlManifest"],[3,"TomlProfiles"],[3,"TomlProfile"],[3,"TomlProject"],[3,"TomlVersion"],[3,"DependencyQueue"],[3,"Sha256"],[3,"GitRepo"],[3,"HgRepo"],[8,"Dependency"]]};
initSearch(searchIndex);
